//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Vector2 p_audioTrip_axis_2d_1;
        
        private static SteamVR_Action_Vector2 p_audioTrip_axis_2d_2;
        
        private static SteamVR_Action_Boolean p_audioTrip_axis_2d_1_click;
        
        private static SteamVR_Action_Single p_audioTrip_trigger;
        
        private static SteamVR_Action_Boolean p_audioTrip_menu;
        
        private static SteamVR_Action_Single p_audioTrip_grip;
        
        private static SteamVR_Action_Vibration p_audioTrip_Haptic;
        
        public static SteamVR_Action_Vector2 audioTrip_axis_2d_1
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_axis_2d_1.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 audioTrip_axis_2d_2
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_axis_2d_2.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean audioTrip_axis_2d_1_click
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_axis_2d_1_click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single audioTrip_trigger
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_trigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean audioTrip_menu
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single audioTrip_grip
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_grip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vibration audioTrip_Haptic
        {
            get
            {
                return SteamVR_Actions.p_audioTrip_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.audioTrip_axis_2d_1,
                    SteamVR_Actions.audioTrip_axis_2d_2,
                    SteamVR_Actions.audioTrip_axis_2d_1_click,
                    SteamVR_Actions.audioTrip_trigger,
                    SteamVR_Actions.audioTrip_menu,
                    SteamVR_Actions.audioTrip_grip,
                    SteamVR_Actions.audioTrip_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.audioTrip_axis_2d_1,
                    SteamVR_Actions.audioTrip_axis_2d_2,
                    SteamVR_Actions.audioTrip_axis_2d_1_click,
                    SteamVR_Actions.audioTrip_trigger,
                    SteamVR_Actions.audioTrip_menu,
                    SteamVR_Actions.audioTrip_grip};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.audioTrip_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.audioTrip_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[0];
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.audioTrip_axis_2d_1_click,
                    SteamVR_Actions.audioTrip_menu};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.audioTrip_trigger,
                    SteamVR_Actions.audioTrip_grip};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.audioTrip_axis_2d_1,
                    SteamVR_Actions.audioTrip_axis_2d_2};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.audioTrip_axis_2d_1,
                    SteamVR_Actions.audioTrip_axis_2d_2,
                    SteamVR_Actions.audioTrip_axis_2d_1_click,
                    SteamVR_Actions.audioTrip_trigger,
                    SteamVR_Actions.audioTrip_menu,
                    SteamVR_Actions.audioTrip_grip};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_audioTrip_axis_2d_1 = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/AudioTrip/in/axis_2d_1")));
            SteamVR_Actions.p_audioTrip_axis_2d_2 = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/AudioTrip/in/axis_2d_2")));
            SteamVR_Actions.p_audioTrip_axis_2d_1_click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/AudioTrip/in/axis_2d_1_click")));
            SteamVR_Actions.p_audioTrip_trigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/AudioTrip/in/trigger")));
            SteamVR_Actions.p_audioTrip_menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/AudioTrip/in/menu")));
            SteamVR_Actions.p_audioTrip_grip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/AudioTrip/in/grip")));
            SteamVR_Actions.p_audioTrip_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/AudioTrip/out/Haptic")));
        }
    }
}
